rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && 
             (request.auth.token.email == 'admin@libris.com' || 
              request.auth.token.email == 'lorraine@example.com' ||
              request.auth.token.email.matches('.*@admin\\.com$'));
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // User trial data - users can read/write their own, admins can read/write all
    match /userTrials/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }
    
    // User profiles - users can read/write their own, admins can read all
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow read: if isAdmin();
    }
    
    // Books collection - authenticated users can read, only owners can write
    match /books/{bookId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
                      (resource == null || isOwner(resource.data.userId));
    }
    
    // User stories - users can manage their own stories
    match /userStories/{storyId} {
      allow read, write: if isAuthenticated() && 
                            (resource == null || isOwner(resource.data.userId));
    }
    
    // Reading progress - users can manage their own progress
    match /readingProgress/{userId} {
      match /{bookId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // Admin logs - only admins can read/write
    match /adminLogs/{logId} {
      allow read, write: if isAdmin();
    }
    
    // System settings - only admins can read/write
    match /settings/{settingId} {
      allow read, write: if isAdmin();
    }
    
    // Default deny rule for any other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
